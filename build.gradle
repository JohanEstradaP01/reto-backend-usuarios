plugins {
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.pragma.powerup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/release' }  // <-- Para Spring Cloud
}

ext {
	springBootVersion = "3.3.3"
	mapstructVersion = "1.5.2.Final"
	lombokVersion = "1.18.24"
	lombokMapstructBindingVersion = "0.2.0"
	mySqlConnectorVersion = "8.0.32"
	openApiVersion = "1.6.11"
	springCloudVersion = "2023.0.1"  // compatible con Spring Boot 3.5.x
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	// Spring Boot
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation 'org.springframework.boot:spring-boot-starter-security'
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	testImplementation "org.springframework.boot:spring-boot-starter-test"

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// DB
	runtimeOnly "mysql:mysql-connector-java:${mySqlConnectorVersion}"

	// MapStruct + Lombok
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

	// OpenAPI
	implementation "org.springdoc:springdoc-openapi-ui:${openApiVersion}"
	implementation "org.springdoc:springdoc-openapi-webflux-ui:${openApiVersion}"

	// Feign Client
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}
